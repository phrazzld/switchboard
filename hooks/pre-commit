#!/bin/sh
#
# Pre-commit hook for Rust projects
# Runs cargo fmt and cargo clippy before allowing commit

# Define line count thresholds
WARN_LINES=500
ERROR_LINES=1000

# Store the colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo "${YELLOW}Running pre-commit checks...${NC}"

# Get list of staged Rust files (excluding deleted files)
STAGED_RS_FILES=$(git diff --name-only --cached --diff-filter=ACM | grep "\.rs$" || true)

# Check if any Rust files are staged
if [ -n "$STAGED_RS_FILES" ]; then
    # Run cargo fmt
    echo "${YELLOW}Running cargo fmt --check...${NC}"
    cargo fmt --check
    if [ $? -ne 0 ]; then
        echo "${RED}Error: Formatting check failed.${NC}"
        echo "Run 'cargo fmt' to fix formatting issues."
        exit 1
    fi

    # Run cargo clippy with strict settings
    echo "${YELLOW}Running cargo clippy...${NC}"
    cargo clippy -- -D warnings
    if [ $? -ne 0 ]; then
        echo "${RED}Error: Linting check failed.${NC}"
        echo "Fix the linting issues before committing."
        exit 1
    fi
    
    # Run tests
    echo "${YELLOW}Running cargo test...${NC}"
    cargo test
    if [ $? -ne 0 ]; then
        echo "${RED}Error: Tests failed.${NC}"
        echo "Fix the failing tests before committing."
        exit 1
    fi
fi

echo "${GREEN}All checks passed!${NC}"
exit 0
