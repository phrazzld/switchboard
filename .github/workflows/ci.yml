# .github/workflows/ci.yml
name: Rust CI

# Controls when the workflow will run
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# Environment variables available to all jobs and steps
env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt # Ensure rustfmt component is installed
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          # Cache paths for cargo registry, git dependencies, and target directory
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          # Create a unique key based on OS, job name, and Cargo.lock hash
          key: ${{ runner.os }}-cargo-fmt-${{ hashFiles('**/Cargo.lock') }}
          # Fallback keys if the exact key is not found
          restore-keys: |
            ${{ runner.os }}-cargo-fmt-
      - name: Run cargo fmt check
        run: cargo fmt --check # Check if code needs formatting

  log-check:
    name: Log Files Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Clean any log files before check
        run: |
          # Ensure log directories exist
          mkdir -p ./logs/app
          mkdir -p ./logs/test
          
          # Clean up any log files - silently fail if no matches are found
          find ./logs -type f -name "*.log" -o -name "*.log.*" -delete 2>/dev/null || true
      - name: Check for log files
        run: |
          # Check if any log files would be staged or committed
          log_files=$(find . -type f -name "*.log" -o -name "*.log.*" | grep -v "target/" | grep -v ".gitkeep")
          
          if [ -n "$log_files" ]; then
            echo "Error: Log files detected in the repository:"
            echo "$log_files"
            echo "Log files should not be committed. Please ensure they are properly ignored."
            exit 1
          else
            echo "No log files detected in the repository."
          fi

  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy # Ensure clippy component is installed
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-lint-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-lint-
      - name: Run cargo clippy
        # Enforce all clippy warnings as errors to ensure high code quality
        run: cargo clippy -- -D warnings

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-
      - name: Run cargo test
        # Run all tests, including unit tests, integration tests, and doctests
        # --all-features ensures features are enabled if needed for tests
        run: cargo test --all-features
      - name: Clean up log files after tests
        run: |
          # Run the cleanup script to ensure all log files are removed
          echo "Cleaning up log files after tests..."
          
          # Use a more robust cleanup approach that works even with deeply nested directories
          find ./logs -type f \( -name "*.log" -o -name "*.log.*" \) -delete || true
          
          # Verify all logs have been removed
          leftover_logs=$(find ./logs -type f -not -name ".gitkeep" 2>/dev/null || true)
          
          if [ -n "$leftover_logs" ]; then
            echo "Warning: Some test log files could not be removed:"
            echo "$leftover_logs"
            # Try to force remove with more privileges
            sudo rm -f $leftover_logs 2>/dev/null || true
          else
            echo "Log cleanup successful - no log files remaining."
          fi

  build:
    name: Build Verification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-
      - name: Run cargo build (release)
        # Build the release artifact to verify compilation in release mode
        # --verbose provides more output if the build fails
        run: cargo build --release --verbose